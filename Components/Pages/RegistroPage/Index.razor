@page "/Combo/Index"
@inject ComboService comboService
@inject NavigationManager navigarionManager
@rendermode InteractiveServer

<PageTitle>Index cotizaciones</PageTitle>
<div class="container">
    <div class="shadow-lg">
        @*hearder*@
        <div class="card-header">
            <div class="text-center">
                <h2><strong>Resgistro de combos</strong></h2>
            </div>
        </div>
        @*Body*@
        <div class="card-body">

            @*Crear*@
            <div class="col text-end">
                <a href="Combos/Create"><button type="button" class="btn btn-success bi bi-person-plus"> Crear</button></a>
            </div>
            @*Tabla*@
            <table class="table table-bordered text-center mt-4">
                <thead>
                    <tr>
                        <th>ComboId</th>
                        <th>Fecha</th>
                        <th>Decripcion</th>
                        <th>Precio</th>
                        <th>Vendido</th>
                        <th>Observar</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var combo in ListaCombo)
                    {
                        <tr>
                            <td>@combo.Fecha</td>
                            <td>@combo.Descricion</td>
                            <td>@combo.Precio</td>
                            <td>@combo.Vendido</td>
                            @*Observar*@
                            <td>
                                <a href="Registro/Details/@combo.ComboId" class="btn btn-outline-primary">
                                    <span class="bi bi-eye"></span>
                                </a>
                            </td>
                            @*Editar*@
                            <td>
                                <a href="Registro/Edit/@combo.ComboId" class="btn btn-outline-warning">
                                    <span class="bi bi-pen"></span>
                                </a>
                            </td>
                            @*Eliminar*@
                            <td>
                                <a href="Registro/Delete/@combo.ComboId" class="btn btn-outline-danger">
                                    <span class="bi bi-trash"></span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer">
            <p><strong>Cantidad de registros:</strong>@ListaCombo.Count</p>
           @*  <button type="button" class="btn btn-primary" @onclick="Prueba">Hola</button> *@
        </div>
    </div>
</div>
@code {
    public Combos combo { get; set; } = new Combos();
    public List<Combos> ListaCombo { get; set; } = new List<Combos>();

    // protected override async Task OnInitializedAsync()
    // {
    //     ListaCombo = await comboService.Listar(c=>true);
    // }

    public List<ToastMessage> Mensaje { get; set; } = [];
    public void Notificacion(ToastType toastType, string title, string message, IconName icono) => Mensaje.Add(ShowToast(toastType, title, message, icono));


    private ToastMessage ShowToast(ToastType toastType, string title, string message, IconName icono)
    {
        var mensaje = new ToastMessage()
            {
                Type = toastType,
                IconName = icono,
                Title = title,
                HelpText = $"{DateTime.Now.ToString("dd/MM/yyyy")}",
                Message = $"{message}. A las {DateTime.Now.ToString("hh:mm tt")}",
            };
        toastService.Notify(mensaje);
        return mensaje;
    }
    public void Prueba()
    {
        Notificacion(ToastType.Success, "Listo", "final", IconName.ArrowDownLeftSquare);
    }
}
